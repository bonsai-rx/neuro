# Builds and publishes the website to gh-pages branch
name: Bonsai.Neuro
on:
  push:
    # This prevents tag pushes from triggering this workflow
    branches: ['**']
  pull_request:
  release:
    types: [published]
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
jobs:
  # =====================================================================================================================================================================
  # Build website
  #  ___      _ _    _              _       _ _       
  # | _ )_  _(_) |__| | __ __ _____| |__ __(_) |_ ___ 
  # | _ \ || | | / _` | \ V  V / -_) '_ (_-< |  _/ -_)
  # |___/\_,_|_|_\__,_|  \_/\_/\___|_.__/__/_|\__\___|
  #                                                   
  # =====================================================================================================================================================================
  build-website:
    name: Build website
    runs-on: ubuntu-latest
    steps:
      # ----------------------------------------------------------------------- Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # ----------------------------------------------------------------------- Set up tools
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Set up .NET tools
        run: dotnet tool restore

      # ----------------------------------------------------------------------- Build documentation
      - name: Build website
        id: build-website
        run: dotnet docfx build ./docfx.json

      # ----------------------------------------------------------------------- Collect artifacts
      - name: Collect website artifact
        uses: actions/upload-artifact@v4
        if: steps.build-website.outcome == 'success' && always()
        with:
          name: DocumentationWebsite
          if-no-files-found: error
          path: artifacts/site/

  # =====================================================================================================================================================================
  # Render workflow images
  #  ___             _                          _    __ _              _
  # | _ \___ _ _  __| |___ _ _  __ __ _____ _ _| |__/ _| |_____ __ __ (_)_ __  __ _ __ _ ___ ___
  # |   / -_) ' \/ _` / -_) '_| \ V  V / _ \ '_| / /  _| / _ \ V  V / | | '  \/ _` / _` / -_|_-<
  # |_|_\___|_||_\__,_\___|_|    \_/\_/\___/_| |_\_\_| |_\___/\_/\_/  |_|_|_|_\__,_\__, \___/__/
  #                                                                                |___/
  # =====================================================================================================================================================================
  workflow-images:
    name: Render workflow images
    runs-on: windows-latest
    steps:
      # ----------------------------------------------------------------------- Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # ----------------------------------------------------------------------- Set up Bonsai environments
      - name: Set up Bonsai environments
        uses: bonsai-rx/setup-bonsai@v1
        with:
          environment-paths: '**/.bonsai/'
          inject-packages: artifacts/packages/*.nupkg

      # ----------------------------------------------------------------------- Render
      - name: Render images
        id: render
        run: pwsh ./export-images.ps1 -OutputFolder artifacts/site/ -Verbose

      # ----------------------------------------------------------------------- Collect artifacts
      - name: Collect images
        uses: actions/upload-artifact@v4
        if: steps.render.outcome == 'success' && always()
        with:
          name: DocumentationWorkflowImages
          if-no-files-found: error
          path: artifacts/site/

  # =====================================================================================================================================================================
  # Publish website
  #  ___      _    _ _    _         _                            _        _   _
  # | _ \_  _| |__| (_)__| |_    __| |___  __ _  _ _ __  ___ _ _| |_ __ _| |_(_)___ _ _
  # |  _/ || | '_ \ | (_-< ' \  / _` / _ \/ _| || | '  \/ -_) ' \  _/ _` |  _| / _ \ ' \
  # |_|  \_,_|_.__/_|_/__/_||_| \__,_\___/\__|\_,_|_|_|_\___|_||_\__\__,_|\__|_\___/_||_|
  # =====================================================================================================================================================================
  publish-website:
    name: Publish website
    runs-on: ubuntu-latest
    needs: [build-website, workflow-images]
    permissions:
      # Both required by actions/deploy-pages
      pages: write
      id-token: write
    environment:
      # Intentionally not using the "default" github-pages environment as it's not compatible with this workflow
      name: documentation-website
      url: ${{steps.publish.outputs.page_url}}
    # Only run if the workflow isn't dying and build-website was successful and either A) we're releasing or B) we have continuous deployment enabled
    if: |
      !cancelled() && !failure() && needs.build-documentation.result == 'success'
      && (github.event_name == 'release'
        || (vars.CONTINUOUS_DEPLOYMENT && github.event_name != 'pull_request')
      )
    steps:
      # ----------------------------------------------------------------------- Download website components
      # It is intentional that we use two independent download steps here as it ensures that workflow images are permitted
      # to overwrite any conflicts in the docfx output but not the other way around.
      - name: Download website
        uses: actions/download-artifact@v4
        with:
          name: DocumentationWebsite

      - name: Download workflow images
        if: ${{needs.workflow-images.result == 'success'}}
        uses: actions/download-artifact@v4
        with:
          name: DocumentationWorkflowImages

      # ----------------------------------------------------------------------- Collect artifacts
      - name: Upload final website artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      # ----------------------------------------------------------------------- Publish to GitHub Pages
      - name: Publish to GitHub Pages
        id: publish
        if: github.event_name == 'release' || vars.CONTINUOUS_DEPLOYMENT || github.event.repository.fork
        uses: actions/deploy-pages@v4